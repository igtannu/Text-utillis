{"version":3,"sources":["components/Alert.js","components/Navbar.js","components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","capitalize","msg","data-bs-dismiss","aria-label","Navbar","mode","href","title","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","id","aria-current","onClick","togglemode","style","height","width","cursor","htmlFor","TextForm","useState","text","setText","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","newText","showAlert","i","length","split","defaultProps","aboutText","App","setMode","setAlert","message","setTimeout","cls","document","body","classList","remove","add","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e6405bb8.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Alert(props) {\r\n\r\n    const capitalize=(word)=>{\r\n        const lower=word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase()+lower.slice(1);\r\n    }\r\n\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n  <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\r\n    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n</div>\r\n\r\n  )\r\n}\r\n\r\nexport default Alert\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n        </li>\r\n        {/* <li className=\"nav-item\">\r\n          <a className=\"nav-link\" href=\"/\">{props.aboutText}</a>\r\n        </li> */}\r\n        \r\n        \r\n      </ul>\r\n      {/* <form className=\"d-flex\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n      </form> */}\r\n\r\n      <div className=\"d-flex\">\r\n        <div className=\"bg-primary rounded mx-2\" onClick={()=>{props.togglemode('primary')} }style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-danger rounded mx-2\" onClick={()=>{props.togglemode('danger')} }style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-success rounded mx-2\" onClick={()=>{props.togglemode('success')} }style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n        <div className=\"bg-warning rounded mx-2\" onClick={()=>{props.togglemode('warning')} }style={{height:'30px',width:'30px',cursor:'pointer'}}></div>\r\n\r\n        \r\n      </div>\r\n\r\n\r\n\r\n      \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n  <input className=\"form-check-input\" type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"  onClick={()=>{props.togglemode(null)}} />\r\n  <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Default switch checkbox input</label>\r\n</div>\r\n    </div>\r\n  </div>\r\n  </nav>\r\n\r\n  )\r\n}\r\n\r\n\r\nNavbar.propTypes= {\r\n    title:PropTypes.string,\r\n    aboutText:PropTypes.string\r\n}\r\n\r\n\r\nNavbar.defaultProps ={\r\n    title:'enter title',\r\n    aboutText:'about it'\r\n};","import React, { useState } from \"react\";\r\n\r\nexport default function TextForm(props) {\r\n  const handleUpClick = () => {\r\n    console.log(\"uppercase clicked\" + text);\r\n    let newText = text.toUpperCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to upper Case\",\"success\");\r\n  };\r\n\r\n  const bold = () => {\r\n    let newText = \"\";\r\n    for (let i = text.length - 1; i >= 0; i--) newText += text[i];\r\n\r\n    setText(newText);\r\n    props.showAlert(\"Reverse String\",\"success\");\r\n  };\r\n\r\n  const handleOnChange = (event) => {\r\n    console.log(\"on Change\");\r\n    setText(event.target.value);\r\n  };\r\n\r\n  const handleLowClick = () => {\r\n    console.log(\"lowercase\");\r\n    let newText = text.toLowerCase();\r\n    setText(newText);\r\n    props.showAlert(\"Converted to lower Case\",\"success\");\r\n  };\r\n\r\n  const [text, setText] = useState(\"Enter Text here\");\r\n  //setText(\"tanuu\");\r\n  return (\r\n    <>\r\n      <div className=\"container\" >\r\n        <h1 style={{color: props.mode==='dark'?'white':'black'}} >{props.heading} </h1>\r\n        <div className=\"mb-3\">\r\n          <label className=\"form-label\"></label>\r\n          <textarea\r\n            className=\"form-control\"\r\n            value={text}\r\n            onChange={handleOnChange}\r\n            style={{\r\n              backgroundColor: (props.mode === 'light' ? 'white' : 'grey'),\r\n              color: (props.mode==='dark'?'white':'black')\r\n            }}\r\n            id=\"exampleFormControlTextarea1\"\r\n            rows=\"8\"></textarea>\r\n        </div>\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleUpClick}>\r\n          Convert To UpperCase\r\n        </button>\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn btn-primary mx-2\"\r\n          onClick={handleLowClick}>\r\n          Convert To LowerCase\r\n        </button>\r\n        <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={bold}>\r\n          Reverse String\r\n        </button>\r\n      </div>\r\n      <div className=\"container my-2\" style={{color: props.mode==='dark'?'white':'black'}}>\r\n        <h2>Your Text Summary</h2>\r\n        <p>\r\n          {\" \"}\r\n          {text.split(\" \").length} Words , {text.length} characters ,{\" \"}\r\n          {text.split(\" \").length * 0.008} Mintues\r\n        </p>\r\n        <h2>Preview</h2>\r\n        <p>{text.length>0?text:\" enter something to textbox\"}</p>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React ,{ useState } from \"react\";\nimport \"./App.css\";\nimport Alert from \"./components/Alert\";\n//import About from './components/About';\nimport Navbar from \"./components/Navbar\";\nimport TextForm from \"./components/TextForm\";\n// import About from \"./components/About\";\n// import { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\n//let name=\"tanuu\";\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  const removeBodyClasses = () => {\n    document.body.classList.remove(\"bg-light\");\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"bg-primary\");\n    document.body.classList.remove(\"bg-warning\");\n    document.body.classList.remove(\"bg-danger\");\n    document.body.classList.remove(\"bg-success\");\n  };\n\n  const togglemode = (cls) => {\n    removeBodyClasses();\n    console.log(cls);\n    document.body.classList.add(\"bg-\" + cls);\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Dark mode enabled\", \"success\");\n    }\n  };\n  return (\n    <> \n        <Navbar title=\"textutilis\" mode={mode} togglemode={togglemode} />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n              <TextForm\n                showAlert={showAlert}\n                heading=\"enter the text to analzye\"\n                mode={mode}   />\n           \n        </div>\n      \n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}